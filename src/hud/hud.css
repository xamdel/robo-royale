/* Set root variables for scaling */
:root {
  --hud-scale: 1;
  --hud-primary-color: #00aaff;
  --hud-warning-color: #ff9900;
  --hud-danger-color: #ff0000;
  --hud-success-color: #00ff00;
  --hud-bg-color: rgba(0, 20, 40, 0.5);
  --hud-glow: 0 0 5px rgba(0, 170, 255, 0.7);
}

/* HUD Container */
#mech-hud {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  font-family: 'Orbitron', 'Roboto Mono', monospace;
  color: var(--hud-primary-color);
  text-shadow: var(--hud-glow);
  z-index: 1000;
}

/* Bottom elements - standard TPS health/ammo bars */
.bottom-element {
  position: absolute;
  display: flex;
  align-items: center;
  background-color: rgba(0, 20, 40, 0.3);
  border: calc(1px * var(--hud-scale)) solid var(--hud-primary-color);
  border-radius: calc(5px * var(--hud-scale));
  padding: calc(6px * var(--hud-scale));
  box-shadow: var(--hud-glow);
}

.health-container {
  left: calc(20px * var(--hud-scale));
  bottom: calc(20px * var(--hud-scale));
  width: calc(260px * var(--hud-scale));
}

.weapon-container {
  width: calc(260px * var(--hud-scale));
  flex-direction: column;
}

.weapons-container {
  right: calc(20px * var(--hud-scale));
  bottom: calc(20px * var(--hud-scale));
  width: calc(300px * var(--hud-scale));
  flex-direction: column;
  padding: calc(10px * var(--hud-scale));
}

.weapon-section {
  width: 100%;
  margin-bottom: calc(5px * var(--hud-scale));
}

.weapon-row {
  display: flex;
  align-items: center;
  width: 100%;
}

.status-name-row {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
}

.weapon-divider {
  width: 100%;
  height: calc(1px * var(--hud-scale));
  background-color: var(--hud-primary-color);
  margin: calc(8px * var(--hud-scale)) 0;
  box-shadow: var(--hud-glow);
}

.ammo-cooldown-container {
  display: flex;
  flex-direction: column;
  width: 100%;
  margin-top: calc(3px * var(--hud-scale));
}

/* Icon styling */
.status-icon {
  width: calc(30px * var(--hud-scale));
  height: calc(30px * var(--hud-scale));
  margin-right: calc(10px * var(--hud-scale));
  color: var(--hud-primary-color);
}

.status-icon svg {
  width: 100%;
  height: 100%;
}

/* Bar wrappers */
.bar-wrapper {
  flex: 1;
  position: relative;
  height: calc(20px * var(--hud-scale));
  background-color: rgba(0, 0, 0, 0.5);
  border: calc(1px * var(--hud-scale)) solid var(--hud-primary-color);
  border-radius: calc(3px * var(--hud-scale));
  overflow: hidden;
}

/* Health System */
.health-bar {
  height: 100%;
  width: 100%;
  background-color: var(--hud-primary-color);
  transition: width 0.3s ease, background-color 0.3s ease;
}

.health-percent {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: calc(12px * var(--hud-scale));
  text-shadow: 0 0 3px #000, 0 0 3px #000;
}

.health-segments {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: row;
  pointer-events: none;
}

.health-segments .segment {
  flex: 1;
  height: 100%;
  border-right: calc(1px * var(--hud-scale)) solid rgba(0, 0, 0, 0.3);
  background-color: rgba(255, 255, 255, 0.2);
  transition: background-color 0.3s ease;
}

.health-segments .segment.active {
  background-color: rgba(0, 170, 255, 0.7);
}

.health-segments .segment:last-child {
  border-right: none;
}

/* Weapon System */
.weapon-header {
  font-size: calc(10px * var(--hud-scale));
  background-color: rgba(0, 40, 80, 0.6);
  text-align: center;
  width: 100%;
  padding: calc(2px * var(--hud-scale));
  margin-bottom: calc(5px * var(--hud-scale));
  border-bottom: calc(1px * var(--hud-scale)) solid var(--hud-primary-color);
  text-transform: uppercase;
  letter-spacing: calc(1px * var(--hud-scale));
}

.weapon-info {
  display: flex;
  flex-direction: column;
  width: 100%;
}

.weapon-status {
  font-size: calc(12px * var(--hud-scale));
  margin-right: calc(5px * var(--hud-scale));
}

.weapon-name {
  font-size: calc(14px * var(--hud-scale));
  font-weight: bold;
}

.next-weapon {
  font-size: calc(10px * var(--hud-scale));
  text-align: right;
  color: rgba(0, 170, 255, 0.7);
  margin-top: calc(2px * var(--hud-scale));
  width: 100%;
}

.key-binding {
  font-size: calc(9px * var(--hud-scale));
  text-align: center;
  margin-top: calc(5px * var(--hud-scale));
  color: rgba(255, 255, 255, 0.8);
  background-color: rgba(0, 0, 0, 0.3);
  padding: calc(2px * var(--hud-scale));
  border-radius: calc(2px * var(--hud-scale));
}

.key-hint {
  color: rgba(0, 170, 255, 0.8);
  font-style: italic;
}

.ammo-display {
  display: flex;
  flex-direction: column;
  width: 100%;
  margin-bottom: calc(5px * var(--hud-scale));
}

.ammo-counter {
  font-size: calc(14px * var(--hud-scale));
  font-weight: bold;
  text-align: center;
  margin-bottom: calc(3px * var(--hud-scale));
}

.ammo-segments {
  height: calc(6px * var(--hud-scale));
  width: 100%;
  display: flex;
  flex-direction: row;
}

.ammo-segments .segment {
  flex: 1;
  height: 100%;
  margin: 0 calc(1px * var(--hud-scale));
  background-color: rgba(255, 255, 255, 0.2);
  transition: background-color 0.3s ease;
}

.ammo-segments .segment.active {
  background-color: rgba(0, 255, 0, 0.7);
}

.status-active {
  color: var(--hud-success-color);
  text-shadow: 0 0 5px rgba(0, 255, 0, 0.7);
}

.status-inactive {
  color: var(--hud-danger-color);
  text-shadow: 0 0 5px rgba(255, 0, 0, 0.7);
}

.status-charging {
  color: var(--hud-warning-color);
  text-shadow: 0 0 5px rgba(255, 153, 0, 0.7);
}

.cooldown-bar {
  height: calc(4px * var(--hud-scale));
  width: 0%;
  background-color: var(--hud-primary-color);
  transition: width 0.2s linear, background-color 0.2s linear;
  border-radius: calc(2px * var(--hud-scale));
  margin-top: calc(3px * var(--hud-scale));
}

/* Corner elements */
.corner-element {
  position: absolute;
  border-radius: calc(5px * var(--hud-scale));
}

.top-left {
  top: calc(20px * var(--hud-scale));
  left: calc(20px * var(--hud-scale));
}

/* Scanner System */
.scanner-container {
  display: flex;
  align-items: center;
  justify-content: center;
}

.scanner-display {
  width: calc(80px * var(--hud-scale));
  height: calc(80px * var(--hud-scale));
  border-radius: 50%;
  border: calc(1px * var(--hud-scale)) solid var(--hud-primary-color);
  background-color: rgba(0, 20, 40, 0.7);
  position: relative;
  overflow: hidden;
  box-shadow: var(--hud-glow), inset 0 0 calc(10px * var(--hud-scale)) rgba(0, 0, 0, 0.5);
}

.scanner-label {
  position: absolute;
  top: calc(5px * var(--hud-scale));
  left: 50%;
  transform: translateX(-50%);
  font-size: calc(8px * var(--hud-scale));
  text-transform: uppercase;
  letter-spacing: calc(1px * var(--hud-scale));
  z-index: 1;
}

.scanner-grid {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image:
    linear-gradient(to right, rgba(0, 170, 255, 0.2) 1px, transparent 1px),
    linear-gradient(to bottom, rgba(0, 170, 255, 0.2) 1px, transparent 1px);
  background-size: calc(10px * var(--hud-scale)) calc(10px * var(--hud-scale));
  opacity: 0.5;
}

.scanner-sweep {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 50%;
  height: 50%;
  margin-top: -50%;
  margin-left: 0;
  background: linear-gradient(90deg, transparent 50%, rgba(0, 170, 255, 0.4) 100%);
  border-radius: 50%;
  transform-origin: 0 100%;
  animation: sweep 4s infinite linear;
}

@keyframes sweep {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.player-indicator {
  position: absolute;
  top: 50%;
  left: 50%;
  width: calc(6px * var(--hud-scale));
  height: calc(6px * var(--hud-scale));
  margin-left: calc(-3px * var(--hud-scale));
  margin-top: calc(-3px * var(--hud-scale));
  background-color: var(--hud-primary-color);
  border-radius: 50%;
  box-shadow: var(--hud-glow);
  z-index: 2;
}

.enemy-indicator {
  position: absolute;
  width: calc(4px * var(--hud-scale));
  height: calc(4px * var(--hud-scale));
  margin-left: calc(-2px * var(--hud-scale));
  margin-top: calc(-2px * var(--hud-scale));
  background-color: var(--hud-danger-color);
  border-radius: 50%;
  box-shadow: 0 0 5px rgba(255, 0, 0, 0.7);
  z-index: 2;
}

/* Target Reticle */
.target-reticle {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: calc(40px * var(--hud-scale));
  height: calc(40px * var(--hud-scale));
}

.reticle-part {
  position: absolute;
  background-color: rgba(0, 170, 255, 0.7);
}

.reticle-top {
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  width: calc(2px * var(--hud-scale));
  height: calc(10px * var(--hud-scale));
}

.reticle-right {
  top: 50%;
  right: 0;
  transform: translateY(-50%);
  width: calc(10px * var(--hud-scale));
  height: calc(2px * var(--hud-scale));
}

.reticle-bottom {
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
  width: calc(2px * var(--hud-scale));
  height: calc(10px * var(--hud-scale));
}

.reticle-left {
  top: 50%;
  left: 0;
  transform: translateY(-50%);
  width: calc(10px * var(--hud-scale));
  height: calc(2px * var(--hud-scale));
}

.reticle-center {
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: calc(4px * var(--hud-scale));
  height: calc(4px * var(--hud-scale));
  border-radius: 50%;
  background-color: transparent;
  border: calc(1px * var(--hud-scale)) solid rgba(0, 170, 255, 0.7);
  /* Default reticle parts are visible by default */
  display: block;
}

/* --- Turret Reticle Style (Red Bullseye) --- */
.reticle-style-turret {
  /* Override default size if needed, or keep the same */
  /* width: calc(40px * var(--hud-scale)); */
  /* height: calc(40px * var(--hud-scale)); */

  /* Use borders to create concentric circles */
  border: calc(2px * var(--hud-scale)) solid var(--hud-danger-color); /* Outer red ring */
  border-radius: 50%;
  background-color: transparent; /* Ensure no background interferes */
  box-sizing: border-box; /* Include border in size */
  position: relative; /* For pseudo-element positioning */
}

/* Hide the default reticle parts when turret style is active */
.reticle-style-turret .reticle-part {
  display: none;
}

/* Add inner ring using a pseudo-element */
.reticle-style-turret::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  /* Size relative to parent */
  width: 50%;
  height: 50%;
  transform: translate(-50%, -50%);
  border: calc(1px * var(--hud-scale)) solid var(--hud-danger-color); /* Inner red ring */
  border-radius: 50%;
  box-sizing: border-box;
}

/* Add center dot using another pseudo-element */
.reticle-style-turret::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: calc(4px * var(--hud-scale)); /* Center dot size */
  height: calc(4px * var(--hud-scale));
  transform: translate(-50%, -50%);
  background-color: var(--hud-danger-color); /* Center red dot */
  border-radius: 50%;
}


/* Alert System */
.alert-container {
  position: absolute;
  top: calc(100px * var(--hud-scale));
  left: 50%;
  transform: translateX(-50%);
  width: calc(300px * var(--hud-scale));
  display: flex;
  flex-direction: column;
  align-items: center;
}

.alert {
  width: 100%;
  padding: calc(10px * var(--hud-scale));
  margin-bottom: calc(10px * var(--hud-scale));
  text-align: center;
  border-radius: calc(5px * var(--hud-scale));
  font-size: calc(14px * var(--hud-scale));
  font-weight: bold;
  animation: fadeIn 0.3s ease;
  opacity: 0.9;
}

.alert-fade {
  animation: fadeOut 0.5s ease forwards;
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(calc(-20px * var(--hud-scale))); }
  to { opacity: 0.9; transform: translateY(0); }
}

@keyframes fadeOut {
  from { opacity: 0.9; transform: translateY(0); }
  to { opacity: 0; transform: translateY(calc(-20px * var(--hud-scale))); }
}

.alert-info {
  background-color: rgba(0, 100, 200, 0.7);
  border: calc(1px * var(--hud-scale)) solid var(--hud-primary-color);
  color: white;
}

.alert-warning {
  background-color: rgba(200, 100, 0, 0.7);
  border: calc(1px * var(--hud-scale)) solid var(--hud-warning-color);
  color: white;
}

.alert-danger {
  background-color: rgba(200, 0, 0, 0.7);
  border: calc(1px * var(--hud-scale)) solid var(--hud-danger-color);
  color: white;
}

/* Message Logs */
.message-logs {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  right: calc(20px * var(--hud-scale));
  width: calc(300px * var(--hud-scale));
  max-height: calc(200px * var(--hud-scale));
  overflow: hidden;
  display: flex;
  flex-direction: column;
  background-color: transparent; /* Changed */
  /* border: calc(1px * var(--hud-scale)) solid var(--hud-primary-color); Removed */
  border-radius: calc(5px * var(--hud-scale));
  padding: calc(5px * var(--hud-scale));
}

.message-title {
  text-align: center;
  font-size: calc(12px * var(--hud-scale));
  text-transform: uppercase;
  letter-spacing: calc(1px * var(--hud-scale));
  margin-bottom: calc(5px * var(--hud-scale));
  border-bottom: calc(1px * var(--hud-scale)) solid var(--hud-primary-color);
  padding-bottom: calc(3px * var(--hud-scale));
}

.message-title span {
  position: relative;
  padding: 0 calc(10px * var(--hud-scale));
}

.message-title span::before,
.message-title span::after {
  content: '';
  position: absolute;
  top: 50%;
  width: calc(5px * var(--hud-scale));
  height: calc(1px * var(--hud-primary-color));
  background-color: var(--hud-primary-color);
}

.message-title span::before {
  left: 0;
}

.message-title span::after {
  right: 0;
}

.message {
  background-color: rgba(0, 20, 40, 0.5);
  border-radius: calc(3px * var(--hud-scale));
  padding: calc(5px * var(--hud-scale)) calc(20px * var(--hud-scale));
  margin-bottom: calc(5px * var(--hud-scale));
  font-size: calc(12px * var(--hud-scale));
  animation: fadeIn 0.3s ease; /* Removed pulse */
  transition: opacity 0.5s ease-out; /* Added for fade out */
  position: relative;
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.7); /* Added for readability */
}

.message::before {
  content: '>';
  position: absolute;
  left: calc(8px * var(--hud-scale));
  top: calc(5px * var(--hud-scale));
  color: var(--hud-primary-color);
}

/* Removed messagePulse keyframes */

/* Tech overlay effect */
#mech-hud::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background:
    radial-gradient(
      ellipse at center,
      transparent 70%,
      rgba(0, 20, 40, 0.3) 100%
    ),
    linear-gradient(
      to bottom,
      transparent 95%,
      rgba(0, 170, 255, 0.1) 100%
    );
  pointer-events: none;
}

/* Futuristic tech details */
.health-container::before,
.weapon-container::before {
  content: '';
  position: absolute;
  width: calc(5px * var(--hud-scale));
  height: calc(10px * var(--hud-scale));
  background-color: transparent;
}

.health-container::before {
  left: calc(-5px * var(--hud-scale));
  top: 50%;
  transform: translateY(-50%);
  border-top: calc(1px * var(--hud-scale)) solid var(--hud-primary-color);
  border-left: calc(1px * var(--hud-scale)) solid var(--hud-primary-color);
  border-bottom: calc(1px * var(--hud-scale)) solid var(--hud-primary-color);
}

.weapon-container::before {
  right: calc(-5px * var(--hud-scale));
  top: 50%;
  transform: translateY(-50%);
  border-top: calc(1px * var(--hud-scale)) solid var(--hud-primary-color);
  border-right: calc(1px * var(--hud-scale)) solid var(--hud-primary-color);
  border-bottom: calc(1px * var(--hud-scale)) solid var(--hud-primary-color);
}


/* Weapon Pickup Context Menu - Bullseye Style */
#weapon-context-menu {
  position: absolute; /* Positioned by JS */
  width: calc(220px * var(--hud-scale));
  height: calc(220px * var(--hud-scale));
  color: var(--hud-primary-color);
  pointer-events: none; /* Container is non-interactive */
  z-index: 2000;
  font-family: 'Orbitron', 'Roboto Mono', monospace;
  text-shadow: var(--hud-glow);
  transition: opacity 0.2s ease-in-out;
  border-radius: 50%;
}

.context-menu-quadrant {
  position: absolute;
  width: 50%;
  height: 50%;
  pointer-events: auto; /* Quadrants are interactive */
  transition: background-color 0.1s ease;
}

/* Positioning Quadrants in a bullseye arrangement - two above, two below */
.context-menu-quadrant[data-mount-id="rightShoulder"] { /* Top Right */
  top: 0;
  left: 50%;
  width: 50%;
  height: 50%;
  transform-origin: bottom left;
}
.context-menu-quadrant[data-mount-id="leftShoulder"] { /* Top Left */
  top: 0;
  left: 0;
  width: 50%;
  height: 50%;
  transform-origin: bottom right;
  overflow: hidden; /* Needed for clip-path */
}
.context-menu-quadrant[data-mount-id="rightArm"] { /* Bottom Right */
  top: 50%;
  left: 50%;
  width: 50%;
  height: 50%;
  transform-origin: top left;
  overflow: hidden; /* Needed for clip-path */
}
.context-menu-quadrant[data-mount-id="leftArm"] { /* Bottom Left */
  top: 50%;
  left: 0;
  width: 50%;
  height: 50%;
  transform-origin: top right;
  overflow: hidden; /* Needed for clip-path */
}

/* Arc Visual - Using pseudo-elements on each quadrant */
.context-menu-quadrant::before {
  content: '';
  position: absolute;
  /* Make it double size to cover the quadrant when clipped */
  width: 200%;
  height: 200%;
  border: calc(20px * var(--hud-scale)) solid rgba(0, 30, 60, 0.85); /* Base color */
  border-radius: 50%;
  box-sizing: border-box;
  pointer-events: none;
  z-index: 1; /* Below label */
  transition: border-color 0.1s ease;
}

/* Position and clip the pseudo-element for each quadrant */
.context-menu-quadrant[data-mount-id="rightShoulder"]::before { /* Top Right */
  top: 0;
  left: -100%;
  clip-path: polygon(50% 0, 100% 0, 100% 50%, 50% 50%);
}
.context-menu-quadrant[data-mount-id="leftShoulder"]::before { /* Top Left */
  top: 0;
  left: 0;
  clip-path: polygon(0 0, 50% 0, 50% 50%, 0 50%);
}
.context-menu-quadrant[data-mount-id="rightArm"]::before { /* Bottom Right */
  top: -100%;
  left: -100%;
  clip-path: polygon(50% 50%, 100% 50%, 100% 100%, 50% 100%);
}
.context-menu-quadrant[data-mount-id="leftArm"]::before { /* Bottom Left */
  top: -100%;
  left: 0;
  clip-path: polygon(0 50%, 50% 50%, 50% 100%, 0 100%);
}

/* Highlight State - Change border color of the pseudo-element */
.context-menu-quadrant.highlighted::before {
  border-color: rgba(0, 170, 255, 0.8); /* Highlight color */
}

/* Unavailable State */
.context-menu-quadrant.unavailable {
  opacity: 0.4;
}
.context-menu-quadrant.unavailable .quadrant-label {
  color: grey;
  text-shadow: none;
}

/* Text Label Styling */
.quadrant-label {
  position: absolute;
  font-size: calc(10px * var(--hud-scale));
  font-weight: normal;
  color: var(--hud-primary-color);
  text-shadow: var(--hud-glow);
  z-index: 2;
  pointer-events: none;
  background-color: rgba(0, 10, 20, 0.8);
  padding: calc(2px * var(--hud-scale)) calc(4px * var(--hud-scale));
  border-radius: calc(2px * var(--hud-scale));
  white-space: nowrap;
}

/* Label Positioning inside the arcs */
.context-menu-quadrant[data-mount-id="rightShoulder"] .quadrant-label {
  top: 25%;
  right: 25%;
  transform: translate(0, 0);
}
.context-menu-quadrant[data-mount-id="leftShoulder"] .quadrant-label {
  top: 25%;
  left: 25%;
  transform: translate(0, 0);
}
.context-menu-quadrant[data-mount-id="rightArm"] .quadrant-label {
  bottom: 25%;
  right: 25%;
  transform: translate(0, 0);
}
.context-menu-quadrant[data-mount-id="leftArm"] .quadrant-label {
  bottom: 25%;
  left: 25%;
  transform: translate(0, 0);
}

/* Weapon Name Styling (when slot is occupied) */
.quadrant-weapon-name {
  position: absolute;
  display: block; /* Ensure it takes its own line */
  font-size: calc(8px * var(--hud-scale)); /* Smaller font */
  font-weight: normal;
  color: rgba(0, 170, 255, 0.8); /* Slightly dimmer color */
  text-shadow: none; /* Optional: remove glow for less emphasis */
  z-index: 2;
  pointer-events: none;
  background-color: rgba(0, 10, 20, 0.8);
  padding: calc(1px * var(--hud-scale)) calc(3px * var(--hud-scale));
  border-radius: calc(2px * var(--hud-scale));
  white-space: nowrap;
  margin-top: calc(12px * var(--hud-scale)); /* Add space below the main label */
}

/* Weapon Name Positioning (relative to quadrant) */
.context-menu-quadrant[data-mount-id="rightShoulder"] .quadrant-weapon-name {
  top: 25%; /* Align with label */
  right: 25%;
  transform: translate(0, 0);
}
.context-menu-quadrant[data-mount-id="leftShoulder"] .quadrant-weapon-name {
  top: 25%; /* Align with label */
  left: 25%;
  transform: translate(0, 0);
}
.context-menu-quadrant[data-mount-id="rightArm"] .quadrant-weapon-name {
  bottom: 25%; /* Align with label */
  right: 25%;
  transform: translate(0, -100%); /* Move it up from the bottom edge */
  margin-top: 0; /* Reset margin */
  margin-bottom: calc(12px * var(--hud-scale)); /* Add space above */
}
.context-menu-quadrant[data-mount-id="leftArm"] .quadrant-weapon-name {
  bottom: 25%; /* Align with label */
  left: 25%;
  transform: translate(0, -100%); /* Move it up from the bottom edge */
  margin-top: 0; /* Reset margin */
  margin-bottom: calc(12px * var(--hud-scale)); /* Add space above */
}


/* Center Text (Weapon Name) */
.context-menu-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: calc(80px * var(--hud-scale));
  text-align: center;
  font-size: calc(12px * var(--hud-scale));
  font-weight: bold;
  text-transform: uppercase;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  background-color: rgba(0, 20, 40, 0.8);
  padding: calc(4px * var(--hud-scale));
  border-radius: calc(3px * var(--hud-scale));
  border: 1px solid var(--hud-primary-color);
  box-shadow: var(--hud-glow);
  z-index: 3;
}

/* Leaderboard Styles */
#leaderboard-container {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 80%;
  max-width: 500px;
  max-height: 70vh;
  background-color: rgba(10, 30, 50, 0.85);
  border: 2px solid #00aaff;
  border-radius: 10px;
  color: #e0e0e0;
  padding: 20px;
  box-shadow: 0 0 15px rgba(0, 170, 255, 0.5);
  z-index: 2000; /* Ensure it's above the HUD */
  font-family: 'Orbitron', 'Roboto Mono', monospace;
  overflow-y: auto; /* Add scrollbar if content overflows */
}

#leaderboard-container h2 {
  text-align: center;
  color: #00aaff;
  margin-top: 0;
  margin-bottom: 15px;
  text-shadow: 0 0 5px rgba(0, 170, 255, 0.7);
  border-bottom: 1px solid rgba(0, 170, 255, 0.5);
  padding-bottom: 10px;
}

/* Header Row Styling */
.leaderboard-header {
  display: flex;
  justify-content: space-between;
  padding: 8px 12px;
  margin-bottom: 5px; /* Space before list */
  border-bottom: 1px solid rgba(0, 170, 255, 0.4);
  font-weight: bold;
  color: #00d0ff; /* Slightly brighter blue */
  font-size: 15px;
}

.header-name {
  flex-basis: 75%; /* Allocate more space to name */
  text-align: left;
}

.header-kills {
  flex-basis: 20%; /* Allocate less space to kills */
  text-align: right;
}

/* List Area Styling */
#leaderboard-container ul {
  list-style: none;
  padding: 0;
  margin: 10px 0 0 0; /* Add margin top */
  max-height: 35vh; /* Limit list height */
  overflow-y: auto; /* Add scroll specifically to list if needed */
}

/* List Item Column Styling */
#leaderboard-container li {
  display: flex; /* Use flexbox for columns */
  justify-content: space-between; /* Space out columns */
  background-color: rgba(0, 20, 40, 0.6);
  padding: 8px 12px;
  margin-bottom: 8px;
  border-radius: 4px;
  border-left: 3px solid #00aaff;
  font-size: 14px;
}

#leaderboard-container li .player-name {
  flex-basis: 75%; /* Match header */
  text-align: left;
  overflow: hidden; /* Prevent long names from breaking layout */
  text-overflow: ellipsis;
  white-space: nowrap;
}

#leaderboard-container li .player-kills {
  flex-basis: 20%; /* Match header */
  text-align: right;
  font-weight: bold;
  color: #ffffff; /* White kills */
}

#leaderboard-container li:last-child {
  margin-bottom: 0;
}

/* --- Mobile Responsiveness --- */
@media (max-width: 768px) {
  /* Adjust bottom elements for smaller screens */
  .bottom-element {
    /* Example: Reduce padding */
    padding: calc(4px * var(--hud-scale));
    /* Example: Adjust font sizes within elements if needed */
    font-size: 0.9em; /* Adjust base font size slightly */
  }

  .health-container {
    /* Example: Move slightly up and maybe reduce width */
    bottom: calc(10px * var(--hud-scale));
    left: calc(10px * var(--hud-scale));
    width: calc(200px * var(--hud-scale)); /* Reduced width */
  }

  .weapons-container {
     /* Example: Move slightly up and maybe reduce width */
    bottom: calc(10px * var(--hud-scale));
    right: calc(10px * var(--hud-scale));
    width: calc(240px * var(--hud-scale)); /* Reduced width */
    padding: calc(6px * var(--hud-scale)); /* Reduced padding */
  }

  /* Adjust scanner size and position */
  .top-left {
    top: calc(10px * var(--hud-scale));
    left: calc(10px * var(--hud-scale));
  }

  .scanner-display {
    width: calc(60px * var(--hud-scale)); /* Smaller scanner */
    height: calc(60px * var(--hud-scale));
  }

  .scanner-label {
    font-size: calc(6px * var(--hud-scale)); /* Smaller label */
  }

  /* Adjust alert container position */
  .alert-container {
    top: calc(60px * var(--hud-scale)); /* Move down slightly */
    width: 80%; /* Use percentage width */
    max-width: calc(280px * var(--hud-scale));
  }

  /* Adjust message log position and size */
  .message-logs {
    right: calc(10px * var(--hud-scale));
    width: calc(250px * var(--hud-scale)); /* Slightly narrower */
    max-height: calc(150px * var(--hud-scale)); /* Shorter */
  }

  /* Adjust reticle size */
   .target-reticle {
    width: calc(30px * var(--hud-scale));
    height: calc(30px * var(--hud-scale));
  }
  .reticle-top, .reticle-bottom { height: calc(8px * var(--hud-scale)); }
  .reticle-left, .reticle-right { width: calc(8px * var(--hud-scale)); }
  .reticle-center { width: calc(3px * var(--hud-scale)); height: calc(3px * var(--hud-scale)); }

  /* Adjust context menu size */
  #weapon-context-menu {
    width: calc(180px * var(--hud-scale));
    height: calc(180px * var(--hud-scale));
  }
  .context-menu-quadrant::before {
     border-width: calc(15px * var(--hud-scale)); /* Thinner border */
  }
   .quadrant-label { font-size: calc(8px * var(--hud-scale)); }
   .quadrant-weapon-name { font-size: calc(7px * var(--hud-scale)); margin-top: calc(10px * var(--hud-scale)); }
   .context-menu-center { font-size: calc(10px * var(--hud-scale)); width: calc(60px * var(--hud-scale)); }

   /* Adjust leaderboard size */
   #leaderboard-container {
     width: 90%; /* Wider on mobile */
     max-width: none; /* Remove max-width */
     padding: 15px;
   }
   #leaderboard-container h2 { font-size: 1.2em; }
   .leaderboard-header { font-size: 14px; }
   #leaderboard-container li { font-size: 13px; }

}

/* --- Item Pickup Badge --- */
.item-badge {
  background-color: rgba(0, 20, 40, 0.85);
  border: calc(1px * var(--hud-scale)) solid var(--hud-primary-color);
  border-radius: calc(4px * var(--hud-scale));
  padding: calc(6px * var(--hud-scale)) calc(10px * var(--hud-scale));
  color: #eee;
  font-family: 'Roboto Mono', monospace;
  text-align: center;
  box-shadow: 0 0 calc(8px * var(--hud-scale)) rgba(0, 170, 255, 0.4);
  white-space: nowrap; /* Prevent wrapping */
  transition: opacity 0.2s ease-in-out;
}

.item-badge-name {
  font-size: calc(12px * var(--hud-scale));
  font-weight: bold;
  color: var(--hud-primary-color);
  margin-bottom: calc(4px * var(--hud-scale));
  text-transform: uppercase;
}

.item-badge-stats {
  font-size: calc(10px * var(--hud-scale));
  color: #ccc;
}

.item-badge-stats span {
  margin: 0 calc(3px * var(--hud-scale));
}


/* --- Platform Specific Visibility --- */

/* Hide mobile controls container on desktop */
body.desktop-device #mobile-controls-container {
  display: none !important;
}

/* Hide standard HUD elements on touch devices, except health, scanner, reticle, and alerts */
body.touch-device #mech-hud > *:not(#mobile-controls-container):not(.health-container):not(.scanner-container):not(.target-reticle):not(.alert-container) {
  display: none !important;
}

/* Ensure mobile controls container is visible only on touch devices */
body.touch-device #mobile-controls-container {
    display: block; /* Make the container visible */
}
/* Ensure individual mobile controls are visible (redundant but safe) */
body.touch-device .mobile-control-zone,
body.touch-device .mobile-touch-button,
body.touch-device .mobile-weapon-widget {
    display: flex !important; /* Use flex for buttons/widgets */
}
body.touch-device .joystick-zone,
body.touch-device .look-area-zone {
    display: block !important; /* Joysticks are block */
}


/* --- Mobile HUD Element Adjustments --- */

/* Health Bar (Top Left) */
body.touch-device .health-container {
    position: absolute; /* Ensure absolute positioning */
    top: calc(15px * var(--hud-scale));
    left: calc(15px * var(--hud-scale));
    bottom: auto; /* Override bottom positioning */
    transform: none; /* Reset transform */
    width: calc(250px * var(--hud-scale)); /* Adjust width as needed */
    height: calc(40px * var(--hud-scale)); /* Adjust height */
    padding: calc(6px * var(--hud-scale));
    z-index: 1150; /* Ensure it's above mobile controls container */
}
body.touch-device .health-container .status-icon {
    width: calc(30px * var(--hud-scale));
    height: calc(30px * var(--hud-scale));
}
body.touch-device .health-container .bar-wrapper {
    height: calc(20px * var(--hud-scale));
}
body.touch-device .health-container .health-percent {
    font-size: calc(14px * var(--hud-scale));
}

/* Radar/Scanner (Top Right) */
body.touch-device .scanner-container.top-left { /* Selector might need adjustment if class changes */
    position: absolute; /* Ensure absolute positioning */
    top: calc(15px * var(--hud-scale));
    right: calc(15px * var(--hud-scale));
    left: auto; /* Override left positioning */
    transform: none; /* Reset transform */
    z-index: 1150; /* Ensure it's above mobile controls container */
}
body.touch-device .scanner-display {
    width: calc(80px * var(--hud-scale)); /* Adjust size */
    height: calc(80px * var(--hud-scale));
}
body.touch-device .scanner-label {
    font-size: calc(8px * var(--hud-scale));
}
body.touch-device .player-indicator {
    width: calc(6px * var(--hud-scale));
    height: calc(6px * var(--hud-scale));
    margin-left: calc(-3px * var(--hud-scale));
    margin-top: calc(-3px * var(--hud-scale));
}
body.touch-device .enemy-indicator {
    width: calc(5px * var(--hud-scale));
    height: calc(5px * var(--hud-scale));
    margin-left: calc(-2.5px * var(--hud-scale));
    margin-top: calc(-2.5px * var(--hud-scale));
}


/* --- Mobile Control Styles (from MobileControlsManager.js) --- */
/* These styles are now defined directly here */

.mobile-control-zone {
    position: absolute;
    /* background-color: rgba(255, 0, 0, 0.1); */ /* Debug: Shows zone */
    box-sizing: border-box;
    pointer-events: none; /* Zones don't capture events unless styled otherwise */
}

/* --- Joysticks --- */
.joystick-zone, .look-area-zone {
    bottom: 30px; /* Consistent bottom margin */
    width: 160px; /* Slightly larger */
    height: 160px;
    background-color: rgba(0, 20, 40, 0.3);
    border: 2px solid var(--hud-primary-color);
    border-radius: 50%;
    box-shadow: var(--hud-glow);
    pointer-events: auto; /* Allow touch */
    z-index: 1110; /* Below buttons/widgets */
}
.joystick-zone { left: 30px; }
.look-area-zone { right: 30px; }

.joystick-stick {
    width: 70px; /* Larger stick */
    height: 70px;
    background-color: rgba(0, 170, 255, 0.5);
    border: 2px solid rgba(0, 170, 255, 0.8);
    border-radius: 50%;
    box-shadow: 0 0 10px rgba(0, 170, 255, 0.4);
    position: absolute; /* Positioned by JS */
    transform: translate(-50%, -50%); /* Center based on top/left */
    pointer-events: none; /* Stick itself doesn't capture events */
}
/* No separate stick needed for look area, it's the whole zone */

/* --- Buttons --- */
.mobile-touch-button {
    position: absolute;
    background-color: rgba(0, 40, 80, 0.6);
    border: 2px solid var(--hud-primary-color);
    border-radius: 50%; /* Default to circular */
    color: var(--hud-primary-color);
    font-family: 'Orbitron', 'Roboto Mono', monospace;
    font-weight: bold;
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: var(--hud-glow);
    text-transform: uppercase;
    pointer-events: auto; /* Buttons are interactive */
    user-select: none;
    -webkit-user-select: none;
    touch-action: manipulation;
    transition: background-color 0.1s ease, transform 0.05s ease;
    z-index: 1120; /* Above joysticks */
}
.mobile-touch-button:active { /* Visual feedback on press */
    background-color: rgba(0, 170, 255, 0.7);
    transform: scale(0.95);
}

/* Fire Buttons (Above Movement Joystick) */
.fire-button {
    width: 75px;
    height: 75px;
    font-size: 12px;
    left: 110px; /* Position relative to joystick center */
    /* transform: translateX(-50%); */ /* Removed, position directly */
}
#fire-primary-left-button { bottom: 200px; } /* Adjusted position */
#fire-secondary-left-button { bottom: 115px; } /* Spaced out */

/* Pickup Button (Lower Left of Aiming Joystick) */
.pickup-button {
    width: 70px;
    height: 70px;
    font-size: 11px;
    bottom: 40px; /* Align near joystick bottom */
    right: 200px; /* Left of aiming joystick */
    background-color: rgba(0, 80, 40, 0.6); /* Greenish tint */
    border-color: rgba(0, 200, 100, 0.8);
}
.pickup-button:active {
     background-color: rgba(0, 200, 100, 0.8);
}

/* Leaderboard Button (Under Radar - Top Right) */
.leaderboard-toggle {
    top: 105px; /* Position below radar */
    right: 25px; /* Align near radar */
    width: 60px;
    height: 40px;
    font-size: 14px;
    border-radius: 5px; /* Rectangular */
}

/* --- Weapon Widgets (Above Aiming Joystick) --- */
.mobile-weapon-widget {
    position: absolute;
    right: 30px; /* Align with aiming joystick */
    width: 180px; /* Wider */
    height: 55px;
    background-color: rgba(0, 20, 40, 0.5);
    border: 2px solid var(--hud-primary-color);
    border-radius: 8px;
    padding: 5px 8px;
    box-shadow: var(--hud-glow);
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 8px;
    pointer-events: auto; /* Allow interaction */
    z-index: 1120; /* Above joysticks */
}
#primary-swap-widget { bottom: 260px; } /* Positioned higher */
#secondary-swap-widget { bottom: 195px; }

.widget-info {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
    color: #eee;
    overflow: hidden;
    pointer-events: none;
}
.widget-name {
    font-size: 13px;
    color: var(--hud-primary-color);
    margin-bottom: 2px;
    font-weight: bold;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}
.widget-ammo {
    font-size: 11px;
    font-family: 'Roboto Mono', monospace;
}
.widget-cooldown {
    height: 5px;
    background-color: rgba(0, 0, 0, 0.5);
    margin-top: 3px;
    border-radius: 2px;
    overflow: hidden;
}
.widget-cooldown-bar {
    height: 100%;
    width: 0%; /* Updated dynamically */
    background-color: var(--hud-primary-color);
    transition: width 0.1s linear, background-color 0.1s linear;
}

.swap-widget-button {
    position: relative; /* Reset position for flex layout */
    width: 45px;
    height: 45px;
    flex-shrink: 0;
    font-size: 22px; /* Larger icon */
    padding: 0;
    border-radius: 5px; /* Match widget */
    z-index: 1121; /* Ensure button is clickable */
}


/* --- Mobile Mount Selector Grid --- */
#mobile-mount-selector {
  position: absolute; /* Positioned by JS */
  display: none; /* Hidden by default */
  flex-direction: column;
  align-items: center;
  background-color: rgba(10, 30, 50, 0.9);
  border: 2px solid var(--hud-primary-color);
  border-radius: 10px;
  padding: 15px;
  box-shadow: 0 0 15px rgba(0, 170, 255, 0.5);
  width: 260px; /* Fixed width */
  z-index: 2100;
  font-family: 'Orbitron', 'Roboto Mono', monospace;
  color: #eee;
}

.mount-selector-title {
  font-size: 16px;
  font-weight: bold;
  color: var(--hud-primary-color);
  margin-bottom: 15px;
  text-align: center;
  text-shadow: var(--hud-glow);
}

.mount-selector-grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(2, 1fr);
  gap: 10px;
  width: 100%;
  margin-bottom: 15px;
}

.mount-selector-cell {
  background-color: rgba(0, 40, 80, 0.7);
  border: 1px solid var(--hud-primary-color);
  border-radius: 5px;
  padding: 10px;
  text-align: center;
  color: #eee;
  cursor: pointer;
  transition: background-color 0.2s ease;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  min-height: 60px; /* Ensure decent tap area */
}

.mount-selector-cell:hover:not(:disabled) {
  background-color: rgba(0, 60, 120, 0.8);
}
.mount-selector-cell:active:not(:disabled) {
  background-color: rgba(0, 80, 150, 0.9);
  transform: scale(0.98);
}


.mount-selector-cell .mount-name {
  font-size: 14px;
  font-weight: bold;
  color: var(--hud-primary-color);
  margin-bottom: 4px;
}

.mount-selector-cell .current-weapon {
  font-size: 11px;
  color: #ccc;
}

.mount-selector-cell.occupied .current-weapon {
  color: #eee; /* Make occupied weapon name clearer */
}

.mount-selector-cell.available .current-weapon {
  color: #888; /* Dim empty slot text */
  font-style: italic;
}

.mount-selector-cell.unavailable {
  opacity: 0.5;
  cursor: default;
}
.mount-selector-cell.unavailable .mount-name {
  color: #aaa;
}
.mount-selector-cell.unavailable .current-weapon {
  color: #777;
}


.mount-selector-cancel {
  background-color: rgba(100, 0, 0, 0.7);
  border: 1px solid var(--hud-danger-color);
  color: #eee;
  padding: 8px 20px;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.2s ease;
  font-size: 14px;
  font-weight: bold;
  width: 50%;
  align-self: center;
}

.mount-selector-cancel:hover {
  background-color: rgba(150, 0, 0, 0.8);
}
.mount-selector-cancel:active {
  background-color: rgba(200, 0, 0, 0.9);
  transform: scale(0.98);
}


/* Remove obsolete mobile radial menu styles */
/* body.touch-device #weapon-context-menu { ... } */
/* body.touch-device .context-menu-quadrant::before { ... } */
/* body.touch-device .quadrant-label { ... } */
/* body.touch-device .quadrant-weapon-name { ... } */
/* body.touch-device .context-menu-center { ... } */
